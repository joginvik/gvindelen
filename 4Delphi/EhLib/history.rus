История EhLib

Версия 5.6

  * Исправлена ошибка обработки глобальной переменной OldStyleFlatBorder. 
      В предыдущих версиях если OldStyleFlatBorder = False (По умолчанию было 
      значение False), то в режиме TDBEditEh.Flat = True плоский (Flat) стиль
      отрисовки границы в TDBEditEh не работал никогда.
      В этой версии если OldStyleFlatBorder = False то плоский стиль границы
      отрисовывается в Classic стиле Windwos (Или если в проекте нет поддержки схем Themes) 
      и НЕ отрисовывается в Themed окружении.


  + В класс TEditButtonEh добавлено новое свойство Images (TEditEh.EditButtons[i].Images)
    типа TEditButtonImagesEh.

    TEditButtonImagesEh = class(TPersistent)
    published
      property NormalImages: TCustomImageList;
      property HotImages: TCustomImageList;
      property PressedImages: TCustomImageList;
      property DisabledImages: TCustomImageList;

      property NormalIndex: Integer;
      property HotIndex: Integer;
      property PressedIndex: Integer;
      property DisabledIndex: Integer;
    end;
    
    Теперь в кнопках редактирования EditButtons для Edit контролов и для TDBGridEh 
    можно выводить картинки из компонента TCustomImageList. Картинки выводятся когда 
    TEditButtonEh.Style = ebsGlyphEh.

  + Добавлено свойство EmptyDataInfo в DBGridEh. Если это свойство включено, DataSet активен 
    и не содержит данные, то DBGridEh покажет надпись «No data». Вы можете задать надпись 
    для каждого Грида в отдельности или присвоить глобальную переменную 
    DBGridEhEmptyDataInfoText находящуюся в модуле DBGridEh.

  + Добавлено свойство EmptyDataInfo в TDBEditEh, TDBNumberEditEh, TDBComboBoxEh, 
    TDBLookupComboBoxEh.
    Используйте свойство EmptyDataInfo.Text для отображения текста, который будет 
    отображаться в Edit контроле когда он не содержит данных.

  + Добавлено стандартное свойство Touch (поддерживается Delphi 2010 и старше) для DBGridEh, 
    TDBEditEh, TDBNumberEditEh, TDBComboBoxEh, TDBLookupComboBoxEh, TDBDateTimeEditEh.

  + Добавлена возможность в design-time открывать окно редактора коллекции кнопок редактирования 
    (EditButtons) для контролов TDBEditEh, TDBNumberEditEh, TDBComboBoxEh, TDBLookupComboBoxEh, 
    TDBDateTimeEditEh. 
    Элемент меню открытия окна коллекции находится в контекстном меню компонента, который 
    открывается по правой кнопки мыши.

  + В TDBCheckBoxEh добавлена возможность устанавливать Пустые значения ('') для свойств 
    ValueChecked, ValueUnchecked. Это позволяет задавать состояние CheckBox'ов для 
    значения поля БД Null.

  + Добавлено событие OnDataGroupGetRowParams в DBGridEh. 
    Событие используется для настройки отображения информации для записей группировки (когда 
    грид работает в режиме группировки Grid.DataGrouping.Active = True).
    В событии можно задать Цвет, Фонт, Текст и Картинку для групповой записи.

  + Добавлена глобальная процедура ExportDBGridEhToOleExcel в модуль DBGridEhImpExp.
    Процедура предназначена для экспортирования данных из DBGridEh в MS Excel.
    Для экспорта процедура использует технологию OLE, а это значит что для ее вызова
    необходимо чтобы MS Excel был установлен на компьютере.

  + В дизаин-тайме при вызове контекстного меню компоненты TDBGridEh отображается информация 
    о версии библиотеки.

  + Добавлена глобальная процедура DrawProgressBarEh. Процедура позволяет рисовать картинку 
    в виде индикатора выполнения (ProgressBar). Ее можно использовать для отображения 
    индикатора выполнения в ячейках грида. Пример использования смотрите в DEMOS\DEMO1

Версия 5.5

  + Добавлена поддержка Embarcadero RAD Studio XE2.

  + В глобальный объект TDBGridEhStyle добавлено свойство ThemeTitleFillElement.
      property ThemeTitleFillElement: TGridThemeTitleFillElementEh;
      TGridThemeTitleFillElementEh = (gtfeHeaderItemEh, gtfeSplitButtonEh);
    Это свойство определяет Themes элемент, который будет использоваться при 
    закраски заголовков в гриде когда у грида Flat = False.

  * При работе под RAD Studio XE2 свойство TDBGridEh.Flat не влияет на закраску 
    заголовков грида, если активирован пользовательский стиль 
    (TStyleManager.IsCustomStyleActive = True).
    В этом случае заголовки грида закрашиваются с использованием Themes стиля 
    заданного свойством DBGridEhDefaultStyle.ThemeTitleFillElement.

  * При выводе заголовков в гриде при доступных XP стилях (Themes) начиная с версии 
    5.5 используется элементы thHeaderItem вместо ttbSplitButton. 
    Чтобы отображать заголовки старым стилем, установите глобальное свойство 
    DBGridEhDefaultStyle.ThemeTitleFillElement = gtfeSplitButtonEh.

Версия 5.4

  + В DBGridEh. Добавлена возможность вывода чекбоксов в столбце индикатора. Чекбоксы 
    используются чтобы выбирать записи в гриде. Чтобы при нажатии мышкой на чекбоксы 
    запись выбиралась, необходимо также настроить свойства грида, позволяющие делать 
    множественный выбор записей: dgMultiSelect в Options, gstRecordBookmarks в 
    AllowedSelections.

  + В DBGridEh добавлено свойство IndicatorOptions типа TDBGridEhIndicatorOptions.
    TDBGridEhIndicatorOptions = set of TDBGridEhIndicatorOption;
    TDBGridEhIndicatorOption = (gioShowRowIndicatorEh, gioShowRecNoEh, gioShowRowselCheckboxesEh);
    gioShowRowIndicatorEh - аналогично свойству dgIndicator в Options.
    gioShowRecNoEh - аналогично свойству dghShowRecNo в OptionsEh.
    gioShowRowselCheckboxesEh - отображать чекбоксы в столбце индикатора.

  + В MemTableEh. Изменен принцип хранения данных для полей типа Calculated и Lookup. 
    Теперь значение этих полей храниться в отдельном буфере для каждой записи, и не 
    пересчитывается при каждом отображении и прокрутке данных в гриде. Это позволило 
    значительно ускорить отображение Lookup полей в гриде и Calculated полей, которые 
    "долго" рассчитываются. Calculated и Lookup пересчитываются только при открытии 
    MemTableEh или когда меняется запись.

  * В MemTableEh. Когда MemTableEh подключен к DataDriver и поля Fields созданы в
    Design-Time (Persistent Field Components), то при открытии MemTableEh формирует 
    внутреннюю структуру на основе списка полей в Fields, а не на основе структуры 
    получаемой от DataDriver. При загрузке данных, типы и количество полей могут 
    не совпадать с данными поступающими от DataDriver. Поля записей MemTableEh, 
    которых нет в записях, поступающих от DataDriver, будут заполняться значениями Null.

Версия 5.3

  + Добавлена поддержка Embarcadero RAD Studio XE.

  + В MemTableEh добавлено свойство Options типа TMemTableOptionsEh.
    TMemTableOptionsEh = set of TMemTableOptionEh;
    TMemTableOptionEh = (mtoTextFieldsCaseInsensitive);
      mtoTextFieldsCaseInsensitive - Определяет что в операциях сравнения при 
        фильтрации данных и сортировки значения полей записей регистронезависимо.
   
  + В TPrintDBGridEh добавлена поддержка печати грида в режиме группировки.

  + В TADOCommandEh добавлено свойство CommandTimeout.


Версия 5.2

   В грид добавлена возможность группировки записей.
   Группировку можно создавать и менять как в Design так и RunTime режиме.
   Группировка работает только когда грид подключен к датасету типа TMemTableEh.

   Используйте подсвойства свойства Grid.DataGrouping для управления группировками.
     Active: Boolean - Используйте это свойство для активизации группировки в 
         гриде.
     DefaultStateExpanded: Boolean - Задает значение Expanded для вновь создаваемых
         элементов дерева группировки.
     GroupLevels: TGridDataGroupLevelsEh - Коллекция уровней группировки. 
         Используйте это свойство для формирования шаблона построения дерева
         группировки.
     GroupPanelVisible: Boolean - Установите это свойство в True чтобы отобразить
         панель группировки в верхней части грида. Когда панель видна, то имеется 
         возможность формировать уровни группировки с помощью мыши, перетаскивая
         заголовки колонок грида в панель группировки.

     Font: TFont - Задает шрифт записей группировки.
     Color: Tcolor - Задает цвет закраски записей группировки.
     
     OnActiveGroupingStructChanged

   См. пример проекта с группировками в DEMOS\DataGrouping

   + TDBGridEhCenter.UseExtendedScrollingForMemTable

Версия 5.1

  * Свойство RowPanel поменяло свой тип. Вместо типа Boolean теперь это объектное 
    свойство с подсвойствами:
      Active: Boolean - Определяет возможность выводить ячейки записи грида друг 
        под другом и менять высоту каждой ячейки.
  +   NavKeysNavigationType: TGridRowPanelNavKeysNavigationTypeEh - 
        задает порядок движения по ячейкам грида при навигации кнопками
        Вверх, Вниз, Влево, Вправо.
        rpntRowToRowEh - (по умолчанию) Кнопки Вниз, Вверх перемещают курсор
          на следующую и предыдущую запись соответственно. Кнопки Влево, Вправо
          работают аналогично Tab, Shift-Tab
        rpntCellToCellEh - Кнопки Вниз, Вверх перемещают курсор
          на следующую и предыдущую ячейку соответственно. Кнопки Влево, Вправо
          перемещают курсор на левую или в правую ячейку соответственно.

  +   TabNavigationType: TGridRowPanelTabNavigationTypeEh - 
        задает порядок обхода ячеек клавишей Tab
        rpntUpToDownPriorityEh - Обход вначале сверху вниз, затем слева на право.
        rpntLeftToRightPriorityEh - Обход вначале слева на право, затем сверху вниз.

  + Добавлена программа для автоматической установки библиотеки в 
    Delphi/C++ Builder IDE. Программа находится здесь Installer\EhLibInstaller.exe.
    Программа создает папку для хранения кодов библиотеки, копирует туда необходимые
    файлы, компилирует пакеты и регистрирует скомпилированные пакеты в IDE.

  + В TColumnEhRestoreParam добавлено значение crpRowPanelColPlacementEh,
    в тип TDBGridEhRestoreParam добавлено значение grpRowPanelColPlacementEh.
    Теперь в процедуре RestoreGridLayout можно восстанавливать положение ячеек
    в режиме RowPanel.

  + Добавлено public свойство RowDetailPanelControl. Используйте это свойство чтобы 
    добавлять компоненты на панель детальной информации в режиме RunTime.
    Для добавления компонентов на RowDetailPanel используйте следующий код
     MyControl.Parent := DBGridEh1.RowDetailPanelControl;

  + В свойство Grid.STFilter добавлено подсвойство
      InstantApply: Boolean - определяет, что фильтр будет применяться сразу при 
           изменении или закрытии выпадающего списка значений для фильтрации
           (STFilter).
      Location: TSTFilterLocationEh - определяет местоположение STFilter'а.
       Под заголовком (stflUnderTitleFilterEh) или в заголовке 
       (stflInTitleFilterEh). В режиме 'в заголовке' STFilter не поддерживает 
       встроенную строку ввода фильтра.

  + Изменился интерфейс отображения выпадающего списка в SubTitleFilter. 
    Теперь можно галочками выбирать необходимые значения для фильтрации.
    В списке появился пункт (Custom...). При выборе этого пункта появляется 
    простой диалог задания фильтра.

  + В режиме автоматического формирования списка значений для выпадающего 
    фильтра (Когда грид подключен к MemTableEh), список формируется с учетом 
    наложенного фильтра в других колонках.

  + Глобальная перерменная DBGridEhShowInTitleFilterBox. Содержит комбинацию
    клавиш для открытия выпадающего списка значений фильтрации когда 
    STFilter.Location = stflInTitleFilterEh. По умолчанию оно содержит значение 
    'Ctrl-T'.
   
  + Определен новый тип события
      TDBGridEhFillSTFilterListValuesEvent = procedure(Sender: TCustomDBGridEh;
        Column: TColumnEh; Items: TStrings; var Processed: Boolean) of object;

     Событие этого типа добавлено в Grid (TDBGridEh.OnFillSTFilterListValues),
     в колонку грида (TColumnEh.OnFillSTFilterListValues) и в TDBGridEhCenter
     (TDBGridEhCenter.OnFillSTFilterListValues)
     Напишите обработчик этого события, чтобы изменить алгоритм заполнения  	
     выпадающего списка значений в ячейки задания фильтра (STFilter). В событии 
     вы можете вызвать обработчик события по умолчанию 
     DefaultFillSTFilterListValues. Каждый элемент списка Items должен состоять 
     из двух значений: Строки Items[i] и объекта Items.Objects[i]. Элементы 
     объектного типа должны наследоваться от типа TPopupListboxItemEh и должны 
     быть созданы глобально. В модуле DBGridEh уже предопределены следующие 
     глобальные переменные 
       PopupListboxItemEhSortAsc: TPopupListboxItemEhSort;
        // Элемент списка отображает значок сортировки Asc и выполняет 
           сортировку по возрастанию.
       PopupListboxItemEhSortDes: TPopupListboxItemEhSort;
        // Элемент списка отображает значок сортировки Des и выполняет 
           сортировку по убыванию.
       PopupListboxItemEhLine: TPopupListboxItemEhLine;
        // Элемент списка отображает горизонтальную линию. При выборе не 
           выполняет никаких действий.

       PopupListboxItemEhClearFilter: TPopupListboxItemEhSpec;
       PopupListboxItemEhAll: TPopupListboxItemEhSpec;
       PopupListboxItemEhEmpties: TPopupListboxItemEhSpec;
       PopupListboxItemEhNotEmties: TPopupListboxItemEhSpec;
       PopupListboxItemEhDialog: TPopupListboxItemEhSpec;
       PopupListboxItemEhApplyFilter: TPopupListboxItemEhSpec;

       PopupListboxItemEhData: TPopupListboxItemEhData;
        // Элемент списка отображает текст, определяющий значение для фильтрации. 
           При выборе, помечает текущий элемент галочкой и добавляет в список 
           элементов, которые задают значения для фильтрации.

       Для заполнения списка уникальных значений колонки, процедура 
       DefaultFillSTFilterListValues вызывает процедуру
       DatasetFeatures.FillSTFilterListDataValues. Реализация последней процедуры 
       зависит от типа DataSet'а. На текущий момент библиотека умеет заполнять 
       список уникальных значений колонки только для датасета типа TMemTableEh.
       Для заполнения уникальных значений при подключении грида к другокму датасету
       перепишите функцию TDatasetFeaturesEh.FillSTFilterListDataValues и 
       по необходимости зарегистрируйте новый класс, наследуемый от TDatasetFeaturesEh.
       Читайте про класс TDatasetFeaturesEh в документации к EhLib и EhLibMTE.Pas.
      
  + В TDBGridEhCenter добавлены свойства STFilterDefaultStringOperator,
      STFilterDefaultNumberOperator, STFilterDefaultDateTimeOperator,
      STFilterDefaultBooleanOperator. Используйте эти свойства, чтобы задать 
      оператор по умолчанию, который будет использоваться, когда в строке 
      фильтрации STFilter явно не прописывается оператор. Операторы можно задать 
      отдельно для строковых полей, числовых полей, полей типа DateTime и 
      логических полей.

Версия 5.0

  + В период разработки добавлена возможность отображать компоненты данных
  (Такие как DataSource, DataSet, DataDriver) в нижнем правом углу грида.
   Компоненты можно выбирать в ObjectInspecor'e кликнув на них мышкой.

  + Режим RowPanel. Добавлена возможность выводить ячейки записи грида друг 
   под другом и менять высоту каждой ячейки.

  + В грид добавлена возможность создавать и настраивать дополнительную панель 
   детальной информации для записей грида. В панель можно добавлять любой 
   контрол из палитры компонент. Во время работы программы панель скрыта и 
   открывается по нажатию на '+', который отображается в начале каждой записи.

  + Добавлена возможность плавной "попиксельной" прокрутки грида по вертикали и 
   горизонтали.

  + Добавлена возможность HotTrack'а. При включенном HotTrack'е грид 
   подсвечивает ячейку или строку (в зависимости от настроек RowHighlight) над 
   которой находится курсор мыши.

  + Добавлена возможность отображать вертикальные линии в градиентном режиме для 
   заполнения пустого пространства между строками с данных и нижней частью грида.

  + В режиме Column.AlwaysShowEditButton грид отображает EditButtons в затененном 
   режиме. Это не раздражают глаза большим количеством кнопок редактирования.

  + В грид добавлено новое свойство - 
       EditButtonsShowOptions: TEditButtonsShowOptionsEh.    
    TEditButtonsShowOptionsEh =  set of (sebShowOnlyForCurCellEh,
    sebShowOnlyForCurRowEh, sebShowOnlyWhenGridActiveEh, 
    sebShowOnlyWhenDataEditingEh);
    Когда у колонки стоит Column.AlwaysShowEditButton это свойство позволяет
    дополнительно настраивать, в каких случаях отображать EditButtons. 

  : Смотрите подробное описание новых возможностей в файле AboutEhlib5.rus.

Версия 4.51

  + Добавлена поддержка Embarcadero RAD Studio 2010.

Версия 4.5

  + В TColumnEh добавлено свойство TextEditing. Используйте это свойство чтобы 
    запрещать отображение текстового редактора в ячейке колонки грида.

  + В TColumnEh и TDBGridEh добавлено событие OnHintShowPause. Используйте 
    это событие чтобы установить длительность задержки перед отображением 
    подсказки (хинта).

  + В TColumnEh и TDBGridEh добавлено событие OnDataHintShow. Используйте это 
    событие чтобы установить Текст, Фонт, Цвет, Позицию или другие параметры 
    окна подсказки (хинта) для каждой ячейки колонки грида. Это событие будет
    вызываться только если Grid.ShowHint установлен в True. В момент вызова
    события грид установит текущую запись в датасете согласно номеру строки 
    грида, так что вы можете обращаться к данным записи. Например:
    Grid.DataSource.DataSet.FieldByName('FieldName').AsString.

  + В TColumnEh и TDBGridEh добавлено событие OnAdvDrawDataCell. Используйте 
    это событие чтобы нарисовать данные в ячейки данных грида. В коде события 
    установите Processed в true чтобы определить что вы обработали процесс 
    прорисовки. Иначе грид вызовет метод для прорисовки содержимого 
    ячеки по умолчанию. Вы можете, если необходимо, изменить параметры
    ARect и Params и вызвать Grid.DefaultDrawColumnDataCell либо  
    оставить Processed в состоянии False и не вызывать 
    Grid.DefaultDrawColumnDataCell. В последнем случае событие
    OnAdvDrawDataCell будет работать подобно событию OnGetCellParams.
    В момент вызова события грид установит текущую запись в датасете согласно 
    номеру строки грида, так что вы можете обращаться к данным записи. Например:
    Grid.DataSource.DataSet.FieldByName('FieldName').AsString. Не изменяйте 
    свойства Grid'а в событии. Для изменения параметров вывода данных на экран 
    используйте параметры события Params или Grid.Canvas если вы выводите данные 
    в ячейку сами через функции GDI.

  + В class TColCellParamsEh добавлены свойства:
      BlankCell: Boolean. Установите это свойство чтобы отобразить ячейку как
       пустую ячейку с 3D окантовкой.
      SuppressActiveCellColor: Boolean. Установите это свойство чтобы запретить 
       цвету активной ячейки перекрывать цвет установленный в свойстве 
       Background.
      TextEditing: Boolean. Установите это свойство чтобы запретить отображение 
        текстового редактора в ячейке колонки грида.
    Класс TColCellParamsEh используется как тип параметра Params в таких событиях 
    как OnGetCellParams и OnAdvDrawDataCell.

  * Исправлены некоторые ошибки.

Версия 4.4

  + Добавлена возможность в Design-Time перемещать столбцы мышкой в гриде.

  + Добавлена возможность в Design-Time выбирать столбцы в Object Inspector 
    кликая на заголовок столбца.

  + Добавлено свойство DrawGraphicData: Boolean. При установки в True, грид
    выводит значение полей TBlobField с типом BlobType = ftGraphic в 
    графическом виде.

  + В грид добавлено событие OnGetRowHeight. В этом событии можно установить
    высоту  строк для каждой строки данных. Событие вызывается при изменении 
    данных в DataSet'е. Событие вызывается только когда грид подключен к 
    TMemTableEh и MemTable не в режиме TreeView.

  + В тип TDBGridEhOption (OptionsEh) добавлено значение dghAutoFitRowHeight. В
    этом режиме грид подсчитывает высоту строк динамически на основе строковых 
    данных в столбцах, у которых TColumnEh.WordWrap = True. Режим работает 
    только когда грид подключен к TMemTableEh и MemTable не в режиме TreeView.
    Грид обновляет высоту строк не при всех изменениях свойств грида. Например 
    грид не обновляет высоту строк если поменять свойство Grid.Font. По этому 
    в программах, вызывайте Grid.UpdateAllDataRowHeights там, где это нужно.

  + В режиме dgRowSelect in Options горизональная прокрута работает в плавном 
    режиме. (Шаг бегунка не ограничивается границами столбцов).

  + В тип TDBGridEhOption (OptionsEh) добавлены значения dghColumnResize, 
    dghColumnMove. Теперь ресайзинг и перемещение колонок можно настраивать 
    отдельно.

  + В тип TDBGridEhOption (OptionsEh) добавлено значение dghShowRecNo. При
    выставлении этого значения, в столбце индикатора будет отображаться
    номер записи. Свойство работает только для DataSet'ов с поддержкой 
    IsSequenced.

  + Изменена прорисовка 3D ячеек в режиме Flat при условии активности XP
    тем (ThemeServices.ThemesEnabled = True). Теперь эти ячейки
    закрашиваются градиентной заливкой. Стиль закраски 3D ячейки теперь
    вписывается в общий стиль отрисовки тем операционной системы.

  * Исправлены некоторые ошибки.

Версия 4.3

  + Добавлена поддержка CodeGear RAD Studio 2009.

  * Исправлены некоторые ошибки.

Версия 4.2

  + Добавлена поддержка Delphi 2007.
 	
  В DBGridEh
 	+ Добавлено свойство IndicatorTitle типа TDBGridEhIndicatorTitle:
    Верхняя левая ячейка может реагировать как кнопка, выводить значок-треугольник, 
    и по нажатию, отображать выпадающее меню ( с возможностью вывода глобального меню,
    которое настраивается с помощью глобальных свойств DBGridEhCenter.IndicatorTitleMenus
    и IndicatorTitleMenus.OnBuildIndicatorTitleMenu).
    Свойство IndicatorTitle имеет следующие подствойства:
      DropdownMenu: TPopupMenu  - Локально выпадающее меню, появляющееся при нажатии на 
        верхнюю левую ячейку грида.
      ShowDropDownSign: Boolean - Определяет, нужно ли выводить значок-треугольник 
        направленный вниз. Удобно выставлять это свойство чтобы показать, что по нажатию на 
        верхнюю-левую ячейку будет выпадать меню.
      TitleButton: Boolean - Определяет, что верхняя левая ячейка реагирует на нажатие мышки
        как на кнопку, т.е. по нажатию будет иметь вдавленный вид. Кроме того, только когда 
        TitleButton = True будет появляться выпадающее меню.
      UseGlobalMenu: Boolean - Определяет, будут ли использоваться свойства глобального 
        обьекта DBGridEhCenter.IndicatorTitleMenus при формировании глобального меню.

    Добавлено событие OnIndicatorTitleMouseDown. Событие срабатывает при нажатии 
      мышкой на самую верхнюю левую ячейку грида. Ячейка должна быть настроена в 
      режим работы кнопки (IndicatorTitle.TitleButton = True). В событии можно 
      вызывать метод DefaultIndicatorTitleMouseDown который передает управление 
      в глобальный объект DBGridEhCenter.

    Добавлено событие OnBuildIndicatorTitleMenu. Срабатывает при формировании 
      выпадающего меню, после нажатия на верхнюю левую ячейку грида. В событии
      можно вызывать метод DefaultBuildIndicatorTitleMenu, который передает
      управление в глобальный объект DBGridEhCenter.

    Добавлено событие OnCellMouseClick. Срабатывает при нажатии любой ячейки грида.
     Передает координаты ячейки и смещение мышки относительно верхнего левого угла 
     ячейки. В событии можно вызывать метод DefaultCellMouseClick который, передает 
     управление в глобальный объект DBGridEhCenter.


  + В модуле DBGridEh.Pas появился новый глобальный объект DBGridEhCenter типа TDBGridEhCenter.
      Этот объект предназначен для управления поведением всех созданных в проекте объектов
      типа TCustomGridEh или порожденных от него. Например, в DBGridEhCenter можно задать
      список меню, которые будут появляется в выпадающем меню всех гридов при нажатии на
      верхнюю левую ячейку столбца индикатора. Кроме того, вы можете написать событие этого 
      объекта и оно будет вызываться при активации аналогичного события в любом гриде проекта.

      Глобальный объект TDBGridEhCenter имеет следующие свойства и события
      IndicatorTitleMenus: 
        Свойство задает список выпадающих меню, которые будут формироваться при 
        нажатии на верхнюю левую ячейку грида. Это свойство глобального объекта и
        будет работать для всех гридов, у которых IndicatorTitle.TitleButton = True.
        (itmVisibleColumnsEh, itmCut, itmCopy, itmPaste, itmDelete, itmSelectAll).
      OnBuildIndicatorTitleMenu: Срабатывает при формировании 
        выпадающего меню при нажатии на верхнюю левую ячейку грида.
      OnCellMouseClick: Срабатывает при нажатии в любой ячейки грида.
        Передает координаты ячейки и смещение мышки относительно верхнего левого 
        угла ячейки.
      OnIndicatorTitleMouseDown: Событие срабатывает при нажатии 
        мышкой на самую верхнюю левую ячейку грида.

  + Глобальная переменная DBGridEhCenter. Эта переменная управляет частью 
      поведения гридов если в них не переопределена функциональность через 
      событие. Вы можете установить свойства или события этой переменной 
      чтобы изменить поведение всех гридов.
		 
  В других объектах и процедурах.
  * Исправления в ADODataDriverEh, свойства SelectCommand, UpdateCommand ... теперь 
    имеют тип TADOCommandEh. 
  * Изменились параметры вызова событий OnAssignCommandParameter и OnGetBackUpdatedValues
    в ADODataDriverEh.
  * Все dfm файлы хранят данные в текстовом виде.
  * Исправлена ошибка прорисовки линий в гриде при установленном свойстве 
    TColumnEh.HideDuplicated в True
  * Исправлена утечка памяти при работе окна поиска TDBGridEhFindDlg.
  * Исправлена ошибка в поиске диалога, когда есть невидимые столбцы.
  * Добавлена поддержка ftWideMemo.
  * Исправлена ошибка зацикливания в компоненте TPrintDBGridEh при печати строк 
    выше высоты страницы.
  * Исправлена ошибка создания нового компонента TDataDriver на форме через меню
    Popup menu компоненты TMemTableEh -> Create DataDriver...
  + TDBLookupComboboxEh добавлена поддержка отображения Memo полей.
  * Исправлена ошибка ввода значения из предыдущей записи по Ctrl+' при подключении
    DBGridEh к TMemTableEh.

Версия 4.1
  + Добавлена поддержка Borland Developer Studio 2006 (Под VCL.Win32 and VCL.NET).

  * Исправлена ошибка мерцания грида в режиме дерева при раскрытии ветки.
  * Исправлена ошибка формирования списка значений в фильтре когда для колонки 
    заполнен PickList и KeyList.
  * Другие небольшие исправления.

Версия 4.0

  * Начиная с этой версии библиотека больше не поддерживает Delphi 4 и C++ Builer 4.

  + Новые компоненты:
    TMemTableEh - dataset, который держит все данные в памяти.
    TDataDriverEh - поставляет записи в TMemTableEh и обрабатывает измененные записи.
    TSQLDataDriverEh, TBDEDataDriverEh, TIBXDataDriverEh, TDBXDataDriverEh и 
    TADODataDriverEh.

    Смотри подробное описание в файле AboutEhlib4_0.rus.

Версия 3.6b

  * Исправлена прорисовка EditButtons при Ctl3D = False.
  * Исправлена независимость от верхнего/нижнего регистра букв в 
	TCustomDBComboBoxEh.KeyItems. Теперь зависит от регистра.
  * Исправлена ошибка прорисовки ячейки при работе с большими числами в 
    DBGridEh.
  * Исправлена ошибка незаполнения ячейки при выборе из MRUList и 
    установленном dghEnterAsTab.
  * Выставление оптимальной ширины колонки учитывает картинки из 
    Column.ImageList.
  * В компоненте TDBLookupComboboxEh свойство Tooltips вынесено в published.
  * Исправлена ошибка преобразования типа когда TPreviewBox помещен во Frame.

Версия 3.6

  + Добавлена поддержка Delphi 2005 (Под VCL.Win32 и VCL.NET).

  + Добавлено свойство Tooltips в TDBEditEh, TDBDateTimeEditEh, TDBNumberEditEh,
     TDBLookupComboboxEh. Позволяет показывать весь текст edit control'а в
     специальном окне подсказок если текст не умещается в видимую область. Текст
     выводится когда курсор мыши находится над окном редактирования.

  В TDBGridEh
    + Добалвены свойства OddRowColor и EvenRowColor для вывода четных и нечетных
      строк различными цветами. Это работает только когда DataSet поддерживает
      нумерацию записей (DataSet.IsSequenced = True) и DataSet.RecNo возвращает 
      правильную информацию.

    + Добавлено значение dghRecordMoving в тип TDBGridEhOption (свойство 
      OptionsEh). Разрешает перемещать записи в dataset'е. Запись перемещается 
      нажатием и перемещением мыши над колонной указателя записей. По умолчанию 
      Grid вызывает TDatasetFeaturesEh.MoveRecords. Код TDatasetFeaturesEh.MoveRecords
      сохраняет значения полей записи, удаляют запись и добавляет новую запись
      в позицию, заданную параметром RecNo.

    + Добавлено событие OnMoveRecords типа TGridMoveRecordsEventEh.
        TGridMoveRecordsEventEh = function(Sender: TObject; BookmarkList: TStrings;
        ToRecNo: Longint; TreeLevel: Integer; CheckOnly: Boolean): Boolean of object;
      BookmarkList это список букмарков которые надо переместить. 
      ToRecNo это номер записи в которую надо переместить.
      TreeLevel это уровень в дереве в который надо переместить, используется только
       когда грид поключен к MemTableEh.
      CheckOnly - определеят что функция должна возвратить результат, возможно ли 
       переместить букмарки в запись ToRecNo, но не перемещать сами букмарки.

    + Добавлено событие OnSelectionChanged. Происходит, после того как 
      multiselected область была изменена.

    * В AdvTech\MemTableEh: Добавлена возможность фильтрации данных в режиме дерева,
      использования общих данных несколькими датасетами и перетаскивание записей 
      внутри дерева в режиме dghRecordMoving.

Версия 3.5

   + Добавлено свойство HighlightRequired в компоненты TDBEditEh, TDBDateTimeEditEh, 
     TDBNumberEditEh, TDBLookupComboboxEh и в объект TColumnEh, TColumnDefValuesEh. Свойство 
     определяет необходимость рисования пунктирной красной линии под редактором ввода текста 
     для обязательных полей (когда TField.Required = True и поле пусто).

   + Добавлено событие OnCheckDrawRequiredState в TDBEditEh, TDBDateTimeEditEh, 
     TDBNumberEditEh, TDBLookupComboboxEh и в объект TColumnEh. Событие запрашивает 
     необходимость рисования состояние RequiredState (пунктирная красная линия под 
     редактором ввода текста).

   + Добавлено свойство Layout: TTextLayout в TColumnEh. Свойство задает вертикальное 
     выравнивание текста в ячейке грида.

   + Добавлено свойство HideDuplicates: Boolean в TColumnEh. Свойство определяет скрывать 
     ли повторяющиеся значения в столбце.

   * Изменено отображение 3D границ в гриде при работе программы в режиме поддержки стилий XP.

   * Процедура ExcecuteDBGridEhFindDialog переименована в ExecuteDBGridEhFindDialog.

   * В AdvTech\MemTableEh: Добавлены индексы и автогененрация списка значений для 
     выпадающем окна в ачейках фильтра.

Версия 3.4

  + Добавлена поддержка Delphi 8 (VCL.NET).

  В  TDBGridEh
   + Добавлено свойство ToolTips в Footer и в ColumnDefValues.Footer.
   + Добавлено свойство SumValue: Variant в TColumnFooterEh.

   + Добавлено свойство ShowImageAndText в TColumnEh. Позволяет выводить Изображение из ImageList 
     и текст из поля в ячейке грида одновременно. Устанавливайте ImageIndex в событии OnGetCellParams.

  В TCustomDBEditEh
   + Добавлено свойство Images: TCustomImageList. Изображения из ImageList'а могут выводится в левой 
    части TDBEditEh, TDBDateTimeEditEh, TDBNumberEditEh or TDBLookupComboboxEh.
   + Добавлено событие OnGetImageIndex: TGetImageIndexEventEh.
        TGetImageIndexEventEh = procedure(Sender: TObject; var ImageIndex: Integer) of object;
     Событие вызывается когда Text or Value в TCustomDBEditEh изменяется. Устанавливайте ImageIndex 
     в зависимости от Text or Value.

